// <auto-generated />
using System;
using ASP_Egyebek.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP_Egyebek.Migrations
{
    [DbContext(typeof(TodoRepository))]
    [Migration("20190502180917_other_tables")]
    partial class other_tables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASP_Egyebek.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("ASP_Egyebek.Models.Todo", b =>
                {
                    b.Property<int>("TodoID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Hours");

                    b.Property<string>("Name");

                    b.Property<int?>("TodoDayId");

                    b.HasKey("TodoID");

                    b.HasIndex("TodoDayId");

                    b.ToTable("Todo");
                });

            modelBuilder.Entity("ASP_Egyebek.Models.TodoDay", b =>
                {
                    b.Property<int>("TodoDayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.HasKey("TodoDayId");

                    b.ToTable("TodoDays");
                });

            modelBuilder.Entity("ASP_Egyebek.Models.TodoPersonConnector", b =>
                {
                    b.Property<int>("ConnId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonId");

                    b.Property<int>("TodoId");

                    b.HasKey("ConnId");

                    b.ToTable("Conns");
                });

            modelBuilder.Entity("ASP_Egyebek.Models.Todo", b =>
                {
                    b.HasOne("ASP_Egyebek.Models.TodoDay")
                        .WithMany("Todos")
                        .HasForeignKey("TodoDayId");
                });
#pragma warning restore 612, 618
        }
    }
}
